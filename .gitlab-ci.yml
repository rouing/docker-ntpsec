.build_template: &build_definition
  stage: build
  image: docker:stable
  services:
    - docker:stable-dind
  script:
    - DOCKER_FILE=${CI_JOB_NAME/build-/}
    - IMAGE_NAME=${DOCKER_FILE%_*}
    - IMAGE_NAME=${IMAGE_NAME/-/\/}
    - IMAGE_TAG=${CI_JOB_NAME#*_}
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG || true
    - >
      docker build
      --pull
      --cache-from $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG
      --rm=false
      --tag $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG .
      --file $DOCKER_FILE
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG

.deploy_template: &release_definition
  stage: deploy
  image: docker:stable
  services:
    - docker:stable-dind
  script:
    - DOCKER_FILE=${CI_JOB_NAME/release-/}
    - IMAGE_NAME=${DOCKER_FILE%_*}
    - IMAGE_NAME=${IMAGE_NAME/-/\/}
    - IMAGE_TAG=${CI_JOB_NAME#*_}
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG || true
    - >
      docker build
      --pull
      --cache-from $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG
      --rm=false
      --tag $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG .
      --file $DOCKER_FILE
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG $DOCKER_HUB_USER/$IMAGE_NAME:$IMAGE_TAG
    - docker logout
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_TOKEN docker.io
    - docker push docker.io/$DOCKER_HUB_USER/$IMAGE_NAME:$IMAGE_TAG

build-builder-alpine_latest:
  <<: *build_definition

release-ntpsec_alpine:
  <<: *release_definition

build-builder-alpine_edge:
  <<: *build_definition

release-ntpsec_alpine-edge:
  <<: *release_definition

build-builder-centos_latest:
  <<: *build_definition

release-ntpsec_centos:
  <<: *release_definition
